---
import { siteConfig } from "../config";

const hasProjects = siteConfig.projects && siteConfig.projects.length > 0;
const hasExperience = siteConfig.experience && siteConfig.experience.length > 0;
const hasEducation = siteConfig.education && siteConfig.education.length > 0;
---

<header
  id="header"
  class="fixed top-0 left-0 right-0 z-50 hidden md:block transition-all duration-300"
>
  <nav class="max-w-7xl mx-auto px-8 py-4 flex justify-center">
    <ul class="flex items-center gap-10">
      <li>
        <a
          href="#about"
          class="nav-link text-gray-700 hover:text-[var(--accent-color)] font-medium transition-colors"
          style={`--accent-color: ${siteConfig.accentColor}`}
        >
          About
        </a>
      </li>
      {hasProjects && (
        <li>
          <a
            href="#projects"
            class="nav-link text-gray-700 hover:text-[var(--accent-color)] font-medium transition-colors"
            style={`--accent-color: ${siteConfig.accentColor}`}
          >
            Projects
          </a>
        </li>
      )}
      {hasExperience && (
        <li>
          <a
            href="#experience"
            class="nav-link text-gray-700 hover:text-[var(--accent-color)] font-medium transition-colors"
            style={`--accent-color: ${siteConfig.accentColor}`}
          >
            Experience
          </a>
        </li>
      )}
      {hasEducation && (
        <li>
          <a
            href="#education"
            class="nav-link text-gray-700 hover:text-[var(--accent-color)] font-medium transition-colors"
            style={`--accent-color: ${siteConfig.accentColor}`}
          >
            Education
          </a>
        </li>
      )}
    </ul>
  </nav>
</header>

<script>
  // Scroll effect for header background
  window.addEventListener("scroll", () => {
    const header = document.getElementById("header");
    if (window.scrollY > 80) {
      header?.classList.add("bg-white/80", "backdrop-blur-lg", "shadow-md");
    } else {
      header?.classList.remove("bg-white/80", "backdrop-blur-lg", "shadow-md");
    }
  });

  // Active link highlighting
  const sections = document.querySelectorAll("section[id]");
  const navLinks = document.querySelectorAll(".nav-link");

  window.addEventListener("scroll", () => {
    let current = "";
    sections.forEach((section) => {
      const sectionTop = section.offsetTop - 120;
      if (scrollY >= sectionTop) {
        current = section.getAttribute("id");
      }
    });

    navLinks.forEach((link) => {
      link.classList.remove("text-[var(--accent-color)]", "font-semibold");
      if (link.getAttribute("href") === `#${current}`) {
        link.classList.add("text-[var(--accent-color)]", "font-semibold");
      }
    });
  });
</script>

<style>
  html {
    scroll-behavior: smooth;
  }
</style>

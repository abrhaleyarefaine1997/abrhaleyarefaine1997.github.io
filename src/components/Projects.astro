---
import { siteConfig } from "../config";
const hasProjects = siteConfig.projects && siteConfig.projects.length > 0;
---

{hasProjects && (
<section id="projects" class="relative py-20 px-6 sm:px-12 md:px-16 lg:px-24 bg-gray-50">
  <!-- Decorative background pattern -->
  <div class="absolute inset-0 -z-10 opacity-20">
    <svg width="100%" height="100%">
      <defs>
        <pattern id="project-pattern" x="0" y="0" width="40" height="40" patternUnits="userSpaceOnUse">
          <circle cx="2" cy="2" r="1" fill="currentColor" />
        </pattern>
      </defs>
      <rect width="100%" height="100%" fill="url(#project-pattern)" class="text-gray-300"></rect>
    </svg>
  </div>

  <div class="max-w-7xl mx-auto">
    <div class="grid grid-cols-1 lg:grid-cols-12 gap-12 lg:gap-20 items-start">
      <!-- Left side: Title -->
      <div class="lg:col-span-4" data-aos="fade-right">
        <h2 class="text-4xl sm:text-5xl md:text-6xl font-extrabold text-gray-900">
          Projects
        </h2>
        <div
          class="w-20 h-1 mt-4 rounded-full"
          style={`background-color: ${siteConfig.accentColor}`}
        ></div>
      </div>

      <!-- Right side: Projects -->
      <div class="lg:col-span-8 space-y-10">
        {siteConfig.projects.map((project, index) => {
          const Component = project.link ? "a" : "div";
          const linkProps = project.link
            ? { href: project.link, target: "_blank", rel: "noopener noreferrer" }
            : {};
          return (
            <div
              class="group relative transform transition-all duration-300 hover:-translate-y-2 hover:shadow-xl hover:scale-[1.02] rounded-xl"
              data-aos="fade-up"
              data-aos-delay={index * 100}
            >
              <Component
                {...linkProps}
                class="block p-6 sm:p-8 bg-white border border-gray-200 rounded-xl transition-all duration-300"
              >
                {project.link && (
                  <div class="absolute top-4 right-4 w-10 h-10 flex items-center justify-center bg-gray-900 rounded-full text-white transition-all duration-300 group-hover:bg-gray-700">
                    <svg
                      class="w-5 h-5 transition-transform duration-300 group-hover:translate-x-0.5 group-hover:-translate-y-0.5"
                      fill="none"
                      stroke="currentColor"
                      viewBox="0 0 24 24"
                    >
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 17L17 7M17 7H7M17 7V17" />
                    </svg>
                  </div>
                )}

                <div class="space-y-4">
                  <div>
                    <span
                      class="text-sm font-mono font-bold"
                      style={`background: linear-gradient(90deg, ${siteConfig.accentColor}, #6EE7B7); -webkit-background-clip: text; color: transparent;`}
                    >
                      0{index + 1}
                    </span>
                    <h3 class="text-xl sm:text-2xl font-bold text-gray-900 mt-1">
                      {project.name}
                    </h3>
                  </div>

                  <p class="text-base sm:text-lg text-gray-600 leading-relaxed pr-16">
                    {project.description}
                  </p>

                  {project.skills && project.skills.length > 0 && (
                    <div class="flex flex-wrap gap-2 mt-2">
                      {project.skills.map((skill) => (
                        <span class="px-3 py-1 bg-gray-900 text-white rounded-md text-xs sm:text-sm font-medium transition-all duration-300 group-hover:bg-gray-800">
                          {skill}
                        </span>
                      ))}
                    </div>
                  )}
                </div>
              </Component>
            </div>
          );
        })}
      </div>
    </div>
  </div>
</section>
)}
